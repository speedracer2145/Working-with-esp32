[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\alok2\OneDrive\Desktop\IOT\Counting\Counting\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/alok2/OneDrive/Desktop/IOT/Counting/Counting/build/bootloader/bootloader.bin"
Bootloader binary size 0x6610 bytes. 0x9f0 bytes (9%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable blink.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/alok2/OneDrive/Desktop/IOT/Counting/Counting/build/blink.bin
[7/8] cmd.exe /C "cd /D C:\Users\alok2\OneDrive\Desktop\IOT\Counting\Counting\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/alok2/OneDrive/Desktop/IOT/Counting/Counting/build/partition_table/partition-table.bin C:/Users/alok2/OneDrive/Desktop/IOT/Counting/Counting/build/blink.bin"
blink.bin binary size 0x2eb40 bytes. Smallest app partition is 0x100000 bytes. 0xd14c0 bytes (82%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0.3\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0.3 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0.3/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/alok2/OneDrive/Desktop/IOT/Counting/Counting/build -P C:/Espressif/frameworks/esp-idf-v5.0.3/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 blink.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting.....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 94:b9:7e:56:1a:bc
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003efff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26128 bytes to 16354...
Writing at 0x00001000... (100 %)
Wrote 26128 bytes (16354 compressed) at 0x00001000 in 0.9 seconds (effective 234.7 kbit/s)...
Hash of data verified.
Compressed 191296 bytes to 101869...
Writing at 0x00010000... (14 %)
Writing at 0x0001b7bc... (28 %)
Writing at 0x00020fcb... (42 %)
Writing at 0x00026d15... (57 %)
Writing at 0x0002daba... (71 %)
Writing at 0x00037986... (85 %)
Writing at 0x0003d57c... (100 %)
Wrote 191296 bytes (101869 compressed) at 0x00010000 in 3.2 seconds (effective 484.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 316.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
